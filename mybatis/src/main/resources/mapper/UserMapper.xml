<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.hwb.mapper.UserMapper">
    	
    	<!-- 实体映射 -->
    	<resultMap id="userMap" type="SysUser">
    		<id property="id" column="id"/>
    		<result property="userName" column="user_name"/>
    		<result property="userPassword" column="user_password"/>
    		<result property="userEmail" column="user_email"/>
    		<result property="userInfo" column="user_info"/>
    		<result property="headImg" column="head_img" jdbcType="BLOB"/>
    		<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    	</resultMap>
    	
    	<resultMap id="userRoleMap" extends="userMap" type="SysUser">
			<association property="role" columnPrefix="role_" resultMap="com.hwb.mapper.RoleMapper.roleMap"/>
    	</resultMap>
    	
    	<resultMap id="userRoleMapSelect" extends="userMap" type="SysUser">
    		<association property="role" fetchType="lazy" column="{id=role_id}" select="com.hwb.mapper.RoleMapper.selectRoleById"/>
    	</resultMap>
    	
    	<resultMap id="userRoleListMap" extends="userMap" type="SysUser">
			<collection property="roleList" columnPrefix="role_" resultMap="com.hwb.mapper.RoleMapper.rolePrivilegeListMap"/>	    	
    	</resultMap>
    	
    	<resultMap id="userRoleListMapSelect" extends="userMap" type="SysUser">
    		<collection property="roleList"
    					fetchType="lazy"
 						select="com.hwb.mapper.RoleMapper.selectRoleByUserId"
 						column="{userId=id}"   		
    		/>
    	</resultMap>
    	
    	<!-- 通用结果查询列 -->
    	<sql id="Base_column_List">
			id, user_name, user_password, user_email, user_info, head_img, create_time
    	</sql>
   
    	<!-- 查询练习 -->
    	<select id="selectById" resultMap="userMap">
    		select     
    		<include refid="Base_column_List"/>
    		from sys_user   
    		where id = #{id}
    	</select>
    	
    	<select id="selectAll" resultType="SysUser">
    		select id, 
    			user_name userName, 
    			user_password userPassword, 
    			user_email userEmail, 
    			user_info userInfo, 
    			head_img headImg, 
    			create_time createTime
    		from sys_user 
    	</select>
    	
    	<select id="selectRoleByUserId" resultType="SysRole">
    		select 
    			r.id,
    			r.role_name roleName,
    			r.enabled,
    			r.create_by, createBy,
    			r.create_time, createTime,
    		from sys_user u
	    		inner join sys_user_role ur on u.id = ur.user_id
	    		inner join sys_role r on ur.role_id = r.id
    		where u.id = #{userId}
    	</select>
    	
    	<!-- 插入练习 -->
    	<insert id="insert">
    		insert into sys_user(
    			id, user_name, user_password, user_Email, user_info, head_img, create_time)
    		values(
    			#{id}, #{userName}, #{userPassword}, #{userEmail},
    			#{userInfo},#{headImg, jdbcType=BLOB},
    			#{createTime, jdbcType=TIMESTAMP}
    		)
    	</insert>
    	
    	<insert id="insert2" useGeneratedKeys="true" keyProperty="id">
    		insert into sys_user(
    			user_name, user_password,
    			<if test="userEmail != null and userEmail != ''">
    			user_Email,
    			</if>
    			user_info, head_img, create_time)
    		values(
    			#{userName}, #{userPassword},
    			<if test="userEmail != null and userEmail != ''">
    			#{userEmail},
    			</if>
    			#{userInfo},#{headImg, jdbcType=BLOB},
    			#{createTime, jdbcType=TIMESTAMP}
    		)
    	</insert>
    	    	
    	<insert id="insert3">
    		insert into sys_user(
    			user_name, user_password, user_Email, user_info, head_img, create_time)
    		values(
    			#{userName}, #{userPassword}, #{userEmail},
    			#{userInfo},#{headImg, jdbcType=BLOB},
    			#{createTime, jdbcType=TIMESTAMP}
    		)
    		<selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
    			SELECT LAST_INSERT_ID()
    		</selectKey>
    	</insert>
    	
    	<!-- 更新练习 -->
    	<update id="updateById">
    		update sys_user
    		set user_name = #{userName},
    			user_password = #{userPassword},
    			user_email = #{userEmail},
    			user_info = #{userInfo},
    			head_img = #{headImg, jdbcType=BLOB},
    			create_time = #{createTime, jdbcType=TIMESTAMP}
    		where id = #{id}
    	</update>
    	
    	<!-- 删除练习 -->
    	<delete id="deleteById">
    		delete from sys_user where id = #{id}
    	</delete>
    	
    	<!-- 多接口参数查询练习 --> 
    	<select id="selectRoleByUserIdAndRoleEnabled">
    		select 
    			r.id,
    			r.role_name roleName,
    			r.enabled,
    			r.create_by createBy,
    			r.create_time createTime,
    		from sys_user u
    			inner join sys_user_role ur on u.id = ur.user_id
    			inner join sys_role r on ur.role_id = r.id
    		where u.id = #{userId} and r.enabled = #{enabled}
    	</select>
		
		<!-- 动态SQl练习 -->     
<!-- 		<select id="selectByUser" resultMap="userMap">
			select
			<include refid="Base_column_List"/>
			from sys_user
			where 1 = 1
			<if test="userName != null and userName != ''" >
				and user_name like concat('%', #{userName}, '%')
			</if>
			<if test="userEmail != null and userEmail != ''">
				and user_email = #{userEmail}
			</if>
		</select> -->
		
		<select id="selectByUser" resultMap="userMap">
			select
			<include refid="Base_column_List"/>
			from sys_user
			<where>
				<if test="userName != null and userName != ''">
					and user_name like concat('%', #{userName}, '%')
				</if>
				<if test="userEmail != null and userEmail != ''">
					and user_email = #{userEmail}
				</if>
			</where>
		</select>
		
<!-- 		<update id="updateByIdSelective">
			update sys_user
			set
				<if test="userName != null and userName != ''">
				user_name = #{userName},				
				</if>		
				<if test="userPassword != null and userPassword != ''">
				user_password = #{userPassword},				
				</if>	
				<if test="userEmail != null and userEmail != ''">
				user_Email = #{userEmail},				
				</if>	
				<if test="userInfo != null and userInfo != ''">
				user_info = #{userInfo},				
				</if>	
				<if test="headImg != null">
				head_img = #{headImg, jdbcType=BLOB},				
				</if>	
				<if test="createTime != null">
				create_time = #{createTime, jdbcType=TIMESTAMP},				
				</if>	
				id = #{id}
				where id = #{id}
		</update> -->
		
		<update id="updateByIdSelective">
			update sys_user
			<set>
				<if test="userName != null and userName != ''">
				user_name = #{userName},				
				</if>		
				<if test="userPassword != null and userPassword != ''">
				user_password = #{userPassword},				
				</if>	
				<if test="userEmail != null and userEmail != ''">
				user_Email = #{userEmail},				
				</if>	
				<if test="userInfo != null and userInfo != ''">
				user_info = #{userInfo},				
				</if>	
				<if test="headImg != null">
				head_img = #{headImg, jdbcType=BLOB},				
				</if>	
				<if test="createTime != null">
				create_time = #{createTime, jdbcType=TIMESTAMP},				
				</if>	
				id = #{id},
			</set>
			where id = #{id}
		</update>
		
		<select id="selectByIdOrUserName" resultType="SysUser">
				select id,
					user_name userName,
					user_password userPassword,
					user_email userEmail,
					user_info userInfo,
					head_img headImg,
					create_time createTime
				from sys_user 
				where 1 = 1
				<choose>
					<when test="id != null">
						 and id = #{id}	
					</when>
					<when test="userName != null and userName != ''">
						and user_name = #{userName}
					</when>
					<otherwise>
						and 1 = 2
					</otherwise>
				</choose> 
		</select>
		
		<select id="selectByIdList" resultMap="userMap">
			select
			<include refid="Base_column_List"/>
			from sys_user
			where id in
			<foreach collection="list" open="(" close=")" separator=","
				item="id" index="i">
				#{id}	
			</foreach>
		</select>
		
		<insert id="insertList">
			insert into sys_user(
				user_name, user_password, user_email,
				user_info, head_img, create_time)
			values
			<foreach collection="list" item="user" separator=","> 
				(
				#{user.userName}, #{user.userPassword}, #{user.userEmail},
				#{user.userInfo}, #{user.headImg, jdbcType=BLOB},
				#{user.createTime, jdbcType=TIMESTAMP}
				)
			</foreach>
		</insert>
		
		<update id="updateByMap">
			update sys_user
			set
			<foreach collection="mm" item="value" index="key" separator=",">
				${key} = #{value}
			</foreach>
			where id = #{id}
		</update>
		
		<select id="selectUserAndRoleById" resultMap="userRoleMap">
			select
				u.id,
				u.user_name,
				u.user_password,
				u.user_email,
				u.user_info,
				u.head_img,
				r.id role_id,
				r.role_name,
				r.enabled enabled,
				r.create_by create_by,
				r.create_time role_create_time
			from sys_user u
				inner join sys_user_role ur on  u.id = ur.user_id
				inner join sys_role r on ur.role_id = r.id
			where u.id = #{id}
		</select>
		
		<select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
			select
				u.id,
				u.user_name,
				u.user_password,
				u.user_info,
				u.head_img,
				u.create_time,
				ur.role_id
			from sys_user u
				inner join sys_user_role ur on u.id = ur.user_id
			where u.id = #{id}
		</select>
		
		<select id="selectAllUserAndRoles" resultMap="userRoleListMap">
			select
				u.id,
				u.user_name,
				u.user_password,
				u.user_email,
				u.head_img,
				u.create_time,
				r.id role_id,
				r.role_name role_role_name,
				r.enabled role_enabled,
				r.create_time role_create_time,
				p.id role_privilege_id,
				p.privilege_name role_privilege_privilege_name,
				p.privilege_url role_privilege_privilege_url
			from sys_user u
				inner join sys_user_role ur on u.id = ur.user_id
				inner join sys_role r on ur.role_id = r.id
				inner join sys_role_privilege rp on rp.role_id = r.id
				inner join sys_privilege p on p.id = rp.privilege_id
		</select>
		
		<select id="selectAllUserAndRolesSelect" resultMap="userRoleListMapSelect">
			select 
				u.id,
				u.user_name,
				u.user_password,
				u.user_email,
				u.user_info,
				u.head_img,
				u.create_time
			from sys_user u
			where u.id = #{id}
		</select>
		
		
		
		
		
		
		
		
		
		
		
		
		
    </mapper>